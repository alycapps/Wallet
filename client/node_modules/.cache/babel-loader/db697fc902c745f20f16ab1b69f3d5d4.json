{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alyss\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Wallet\\\\client\\\\src\\\\pages\\\\add\\\\Add.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport { Card } from \"../../components/card\";\nimport Grid from \"react-bootstrap/lib/Grid\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport ButtonToolBar from \"react-bootstrap/lib/ButtonToolbar\";\nimport Button from \"react-bootstrap/lib/Button\";\nvar style = {\n  color: 'red'\n};\n\nvar Add =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Add, _Component);\n\n  function Add() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Add)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      number: \"\",\n      exp: \"\",\n      cvv: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n\n      console.log(_this.state);\n    };\n\n    _this.validateBlank = function () {\n      console.log('button clicked');\n\n      if (_this.state.name && _this.state.cvv && _this.state.exp && _this.state.number) {\n        _this.validateLetters();\n      } else {\n        document.getElementById(\"messageLoc\").innerHTML = \"Please fill out all fields\";\n      }\n    };\n\n    _this.validateLetters = function () {\n      var nameval = document.getElementById('name').value;\n\n      if (!nameval.match(/^[a-zA-Z\\s]*$/)) {\n        document.getElementById(\"messageLoc\").innerHTML = \"Full Name must only contain characters A-Z\";\n      } else {\n        _this.validateNumbers();\n      }\n    };\n\n    _this.validateNumbers = function () {\n      var numval = document.getElementById('number').value;\n      var cvvval = document.getElementById('cvv').value;\n\n      if (!numval.match(/^[0-9]+$/)) {\n        document.getElementById(\"messageLoc\").innerHTML = \"Card Number must only contain numbers 0-9.\";\n      } else {\n        if (!cvvval.match(/^[0-9]+$/)) {\n          document.getElementById(\"messageLoc\").innerHTML = \"CVV must only contain numbers 0-9.\";\n        } else {\n          _this.validateLength();\n        }\n      }\n    };\n\n    _this.validateLength = function () {\n      var cvvval = document.getElementById('cvv').value;\n      var numval = document.getElementById('number').value;\n\n      if (cvvval.length > 3 || cvvval.length < 3) {\n        document.getElementById(\"messageLoc\").innerHTML = \"CVV should contain exactly 3 digits\";\n      } else {\n        if (!(numval.length > 15 && numval.length < 20)) {\n          document.getElementById(\"messageLoc\").innerHTML = \"Card should be between 16 and 19 digits\";\n        } else {\n          _this.validateFormat();\n        }\n      }\n    };\n\n    _this.validateFormat = function () {\n      var expval = document.getElementById('exp').value;\n\n      if (!expval.match(/^(0[1-9]|1[0-2])\\/\\d{2}$/)) {\n        document.getElementById(\"messageLoc\").innerHTML = \"Expiration date must be in mm/yy format\";\n      } else {\n        _this.addCard();\n      }\n    };\n\n    _this.addCard = function () {\n      console.log(_this.state);\n      var cardInfo = {\n        name: _this.state.name,\n        number: _this.state.number,\n        exp: _this.state.exp,\n        cvv: _this.state.cvv\n      };\n      API.saveCard(cardInfo).then(function (res) {\n        console.log(res, \"This is the response from card info\");\n\n        if (res.status === 200) {\n          document.getElementById(\"messageLoc\").innerHTML = \"Card succesfully added\";\n        } else {\n          document.getElementById(\"messageLoc\").innerHTML = \"There was a problem saving your card\";\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Add a New Card\"), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"messageLoc\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        id: \"inputLoc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Full Name: \"), React.createElement(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        onChange: this.handleInputChange,\n        placeholder: \"eg. John Matthew Smith\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Card Number: \"), React.createElement(\"input\", {\n        id: \"number\",\n        type: \"text\",\n        name: \"number\",\n        onChange: this.handleInputChange,\n        placeholder: \"eg. 123456789\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Expiration Date: \"), React.createElement(\"input\", {\n        id: \"exp\",\n        type: \"text\",\n        name: \"exp\",\n        onChange: this.handleInputChange,\n        placeholder: \"eg. 01/01\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"cvv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"CVV: \"), React.createElement(\"input\", {\n        id: \"cvv\",\n        type: \"text\",\n        name: \"cvv\",\n        onChange: this.handleInputChange,\n        placeholder: \"eg. 123\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(ButtonToolBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"danger\",\n        onClick: function onClick() {\n          return _this2.validateBlank();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Submit\"))))), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport default Add;","map":{"version":3,"sources":["C:\\Users\\alyss\\Documents\\Coding Boot Camp\\Homework\\Wallet\\client\\src\\pages\\add\\Add.js"],"names":["React","Component","API","Card","Grid","Row","Col","ButtonToolBar","Button","style","color","Add","state","name","number","exp","cvv","handleInputChange","event","target","value","setState","console","log","validateBlank","validateLetters","document","getElementById","innerHTML","nameval","match","validateNumbers","numval","cvvval","validateLength","length","validateFormat","expval","addCard","cardInfo","saveCard","then","res","status"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport API from \"../../utils/API\"\r\nimport {Card} from \"../../components/card\";\r\nimport Grid from \"react-bootstrap/lib/Grid\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport ButtonToolBar from \"react-bootstrap/lib/ButtonToolbar\";\r\nimport Button from \"react-bootstrap/lib/Button\";\r\n\r\nlet style = {\r\n  color: 'red',\r\n};\r\n\r\nclass Add extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    exp: \"\",\r\n    cvv: \"\"\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(this.state)\r\n  };\r\n\r\n  validateBlank = () => {\r\n    console.log('button clicked')\r\n    if(this.state.name && this.state.cvv && this.state.exp && this.state.number) {\r\n      this.validateLetters();\r\n    }\r\n    else {\r\n      document.getElementById(\"messageLoc\").innerHTML = \"Please fill out all fields\";\r\n    }\r\n  };\r\n\r\n  validateLetters = () => {\r\n    let nameval = document.getElementById('name').value;\r\n    if(!nameval.match(/^[a-zA-Z\\s]*$/)) {\r\n      document.getElementById(\"messageLoc\").innerHTML = \"Full Name must only contain characters A-Z\";\r\n    }\r\n    else {\r\n      this.validateNumbers();\r\n    }\r\n  };\r\n\r\n  validateNumbers = () => {\r\n    let numval = document.getElementById('number').value;\r\n    let cvvval = document.getElementById('cvv').value;\r\n    if(!numval.match(/^[0-9]+$/)) {\r\n      document.getElementById(\"messageLoc\").innerHTML = \"Card Number must only contain numbers 0-9.\";\r\n    }\r\n    else {\r\n      if(!cvvval.match(/^[0-9]+$/)) {\r\n        document.getElementById(\"messageLoc\").innerHTML = \"CVV must only contain numbers 0-9.\";\r\n      }\r\n      else {\r\n        this.validateLength();\r\n      }    }\r\n  };\r\n\r\n  validateLength = () => {\r\n    let cvvval = document.getElementById('cvv').value;\r\n    let numval = document.getElementById('number').value;\r\n      if(cvvval.length > 3 || cvvval.length < 3) {\r\n        document.getElementById(\"messageLoc\").innerHTML = \"CVV should contain exactly 3 digits\";\r\n      }\r\n      else {\r\n        if(!(numval.length > 15 && numval.length < 20)) {\r\n          document.getElementById(\"messageLoc\").innerHTML = \"Card should be between 16 and 19 digits\";\r\n        }\r\n        else {\r\n          this.validateFormat();\r\n        }      \r\n      }\r\n  };\r\n\r\n  validateFormat = () => {\r\n    let expval = document.getElementById('exp').value;\r\n    if(!expval.match(/^(0[1-9]|1[0-2])\\/\\d{2}$/)) {\r\n      document.getElementById(\"messageLoc\").innerHTML = \"Expiration date must be in mm/yy format\";\r\n    }\r\n    else {\r\n      this.addCard();\r\n    }\r\n  }\r\n\r\n  addCard = () => {\r\n    console.log(this.state)\r\n    const cardInfo = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      exp: this.state.exp,\r\n      cvv: this.state.cvv   \r\n    }\r\n    API.saveCard(cardInfo).then(res => {\r\n        console.log(res, \"This is the response from card info\");\r\n        if (res.status === 200) {\r\n          document.getElementById(\"messageLoc\").innerHTML = \"Card succesfully added\";\r\n        }\r\n        else {\r\n          document.getElementById(\"messageLoc\").innerHTML = \"There was a problem saving your card\";\r\n        }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Add a New Card</h1>\r\n        <Grid>\r\n          <Row>\r\n            <Col md={2}>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Card>\r\n                <p id=\"messageLoc\" style={style}></p>\r\n                <form id=\"inputLoc\">\r\n                  <label htmlFor=\"name\">Full Name: </label>\r\n                  <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={this.handleInputChange}\r\n                  placeholder= \"eg. John Matthew Smith\"\r\n                  />\r\n                  <br/>\r\n                  <label htmlFor=\"number\">Card Number: </label>\r\n                  <input\r\n                  id=\"number\"\r\n                  type=\"text\"\r\n                  name=\"number\"\r\n                  onChange={this.handleInputChange}\r\n                  placeholder= \"eg. 123456789\"\r\n                  />\r\n                  <br/>\r\n                  <label htmlFor=\"exp\">Expiration Date: </label>\r\n                  <input\r\n                  id=\"exp\"\r\n                  type=\"text\"\r\n                  name=\"exp\"\r\n                  onChange={this.handleInputChange}\r\n                  placeholder= \"eg. 01/01\"\r\n                  />\r\n                  <br/>\r\n                  <label htmlFor=\"cvv\">CVV: </label>\r\n                  <input\r\n                  id=\"cvv\"\r\n                  type=\"text\"\r\n                  name=\"cvv\"\r\n                  onChange={this.handleInputChange}\r\n                  placeholder= \"eg. 123\"\r\n                  />\r\n                  <br/>\r\n                  <ButtonToolBar>\r\n                    <Button bsStyle=\"danger\" onClick={() => this.validateBlank()}>Submit</Button>\r\n                  </ButtonToolBar>\r\n                </form>\r\n              </Card>\r\n            </Col>\r\n            <Col md={2}>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;"]},"metadata":{},"sourceType":"module"}